<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Ray12321]]></title>
  <link href="http://guori12321.github.io/atom.xml" rel="self"/>
  <link href="http://guori12321.github.io/"/>
  <updated>2013-12-14T17:40:30+08:00</updated>
  <id>http://guori12321.github.io/</id>
  <author>
    <name><![CDATA[Ray12321]]></name>
    <email><![CDATA[guori12321@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[GRE查分的问题]]></title>
    <link href="http://guori12321.github.io/blog/2013/11/27/grecha-fen-de-wen-ti/"/>
    <updated>2013-11-27T21:42:00+08:00</updated>
    <id>http://guori12321.github.io/blog/2013/11/27/grecha-fen-de-wen-ti</id>
    <content type="html"><![CDATA[<p>我查GRE的分就一直没查出来过。每次都显示</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Important Message
</span><span class='line'>The information you provided does not match our records. Please try again</span></code></pre></td></tr></table></div></figure>


<p>第一次考G之后，因为分太低，也就没有心思去研究下怎么查了。结果第二次考完，分还是特别的低，也还是查不出来分。之后收到了ETS的纸质的GRE成绩单。</p>

<p>一直拖到现在，因为马上要到申请的Deadline了，必须把GRE的成绩寄出去，于是，就只能去想办法查分送成绩了。</p>

<!--more-->


<p>解决的办法很简单，用Skype打<a href="http://www.ets.org/gre/contact">GRE的电话</a>。和对方接线员唠了半个小时，最后她帮我重新创立了一个GRE查分的账号，我这边登录成功后，终于可以用<code>NEEA注册号</code>加<code>电子邮箱</code>查出来分了。</p>

<p>对方的接线员很和蔼很nice，说话语速也很慢，很照顾我这种英语不好的人&hellip;最开始，她问了我一些个人信息，姓名，生日，邮箱，地址等，之后就用我的姓名加生日搜索信息，发现我有两次GRE的考试成绩，但没有发现匹配这些信息的GRE查分的账号。一一核对后发现，是生日这一项错误，我填的是1月1号，而不是1月16号。我在我这边看了一下，确实是<strong>生日错误</strong>！而且生日这些信息，不像邮箱之类的，没有办法更改。接线员解释说，这样他们的系统会以为这个账号的所有者和这个成绩的考生是两个人，因为生日不一样。我问她，能不能帮忙改下，她说不行，只能重建一个账号。我非常不愿意重建账号，因为要再等24小时才能查分。她问我要不要帮我创建一个，我说，要（其实当时没怎么听懂&hellip;）然后是很麻烦的告诉她各种信息，选择账号和密码，还有保密问题。最后，我在我的机子上，终于查出来了我的分数。看来接线员创建的账号不用等24小时。</p>

<p>总之，提醒大家，个人信息一定要符合自己注册时的信息。所有的信息，在中国教育部的GRE考试中心发过来的确认信上都有（地址是在信的抬头部分）。</p>

<p>另外，有些同学碰到的问题是，注册查分账号时，姓和名反过来了。</p>

<p>最后，用Skype打美国GRE中心的电话，是不用花钱的。我之前还从淘宝上充了10欧的话费，没有用上。需要考虑的另一点是时差，GRE考试中心用的是美国东海岸的时间（纽约或华盛顿时间），我是晚上9点打过去，那边正好是早上8点。注意节假日他们不上班，比如明天，是感恩节。</p>

<p>出国是很艰难的，祝我，也祝大家，都能有好的归宿~~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我的AsterixDB路线图]]></title>
    <link href="http://guori12321.github.io/blog/2013/11/25/wo-de-asterixdblu-xian-tu/"/>
    <updated>2013-11-25T10:27:00+08:00</updated>
    <id>http://guori12321.github.io/blog/2013/11/25/wo-de-asterixdblu-xian-tu</id>
    <content type="html"><![CDATA[<p>AsterixDB是UC Irvine大学主导开发的一款并行划，分布式的数据库。更多的介绍可以看<a href="http://asterixdb.ics.uci.edu/">这里</a>。下面是我参与开发过程的一些记录。</p>

<!--more-->


<h2>获得源代码</h2>

<p>首先是下载源代码。在它的<a href="">Google Code的Source页面</a>中，可以找到下面这句</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone https://code.google.com/p/asterixdb/</span></code></pre></td></tr></table></div></figure>


<p>这样你就可以把它的源代码下载下来了。</p>

<p>查看下，发现除了java文件外，就是XML这种结构文件。</p>

<h2>导入项目</h2>

<p>因为源代码中没有<code>.projecr</code>文件，所以说，没办法像平时一样用Eclipse直接import进去。查来查去，在<a href="http://stackoverflow.com/questions/2638016/why-no-projects-found-to-import">stackoverflow</a>应该这么做</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Goto File &gt; New &gt; Java Project
</span><span class='line'>Uncheck Use default location
</span><span class='line'>Click on Browse to navigate to your source folder, or type in the path to your source
</span><span class='line'>Click Finish</span></code></pre></td></tr></table></div></figure>


<p>注意到一点，Eclipse有Bug: 如果你的项目的路径，在你的workspace下，那么，Eclipse会报错<code>folder overlaps the location of an existing project</code>，具体参考<a href="http://stackoverflow.com/questions/10368903/where-is-create-project-from-existing-source-in-eclipse-indigo">这个问题</a>。把默认的workspace删了，别选Use default location，然后选asterixdb的文件夹，就可以了。之后再把workspace加回来。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[欧洲旅行计划]]></title>
    <link href="http://guori12321.github.io/blog/2013/11/24/ou-zhou-lu-xing-ji-hua/"/>
    <updated>2013-11-24T20:14:00+08:00</updated>
    <id>http://guori12321.github.io/blog/2013/11/24/ou-zhou-lu-xing-ji-hua</id>
    <content type="html"><![CDATA[<p>在长春的万达广场，很开心的和YYJ同学聊天。自她从法国从来，我就还没见过她呢。转眼就到了各奔前程的时候了。谈的最多的，除了初高中那几个NB人物外，就是她在法国的经历了。同时也帮我小小规划了下去法国交换时的旅行计划~</p>

<!--more-->


<p>首先，去法国，是所谓的<code>申根签证</code>，也就是传说中的在欧盟几乎可以到处溜达的签证。不能去的地方是英国，以及其它一些边境上的小岛。想去英国的话，需要在巴黎提前一周办理签证，具体手续比较麻烦，需要相关的财产证明，另外最好有来自英国的朋友的邀请信。不知道在英国的同学可不可以开这个邀请信，到时候再说。</p>

<p>另外，在欧洲，吃饭是个大问题。在香港贵点，三十多一顿，我都吃的肉疼，在欧洲肯定是要自己做了。想想当年意大利的学长，各种意大利面各种煮啊。我在香港两个月，看到意粉，都想吐了&hellip;</p>

<p>她在法国的时候，除了法国本身，主要去了意大利，西班牙，北欧，雅典几个国家。因为她平时还要上课，不怎么有机会出去玩。我想我过去以后应该是大把的时间玩了。</p>

<p>她的建议是，首先，在<strong>一月</strong>的时候去北欧，挪威什么的。在这种靠近北极的地方，可以去看极光~另外，在<strong>四月</strong>的时候去雅典，这个时候雅典比较暖和。雅典本身，据她所说，破破烂烂的，没一点首都的样子。倒是雅典的各个小岛，很美，此外雅典人也很热情。想想这些小岛，就是千百年前的雅典城邦了吧。</p>

<p>西班牙最有名的建筑，就是圣家堡大教堂了。看她的照片，我很惊讶这玩意后面怎么还有吊车，查了wiki后才发现，这个教堂，现在<strong>还在建</strong>，建了200多年，还没有建完。也也是世界上唯一一个还没建完就被列为世界文化遗产的建筑。看完了它，世界上其它教堂就都没感觉了。</p>

<p>至于意大利，她提到了大卫雕像，为了看个雕像，还专门花了12欧的门票。意大利不怎么有学生票，满大街却都是各种博物馆，没办法，古罗马帝国的传承。在法国，拿着学生证（有些地方要查护照上的学生签证），就可以免费或花很少的钱游览各种博物馆了。</p>

<p>我最羡慕的一点是滑雪。在法国的某座山头上（阿尔卑斯山的分支），她们十几个女生，租了一周的<strong>小木屋</strong>，有两个法国人会滑雪，就教了她们三四天。在她下山的时候，已经可以滑倒数第二难的雪道了。我在哈尔滨滑过一次，撞的比较狠，之后的三天都头晕。希望法国的雪道人能少点吧。</p>

<p>最后要说的一点，就是安全。她没怎么玩的原因之一，也是安全问题，毕竟一个女生不怎么敢到处走。她们学校去年的一位学姐就在法国被杀害了。我出去玩的时候，人稍微少点的地方都不敢去啊&hellip;到时候还是多叫几个人，一起滑雪什么的吧，如果能叫到的话&hellip;另外，问了某个在意大利上学的学长，他很淡定的告诉我，要防寒，防偷抢&hellip;回忆起他当年发的各种在罗马和当小偷的孩子斗智斗勇的故事，哎&hellip;</p>

<p>虽然，生活的本质，还是很痛苦的。不管是我还是她，现在都是为各种前程的事情担心。法国，我想以后对我来说，也只能是一段回忆，但是，现在，还是好好期待下吧~在工大，好好学习使用在香港实习时买的单反，多在欧洲拍点好照片出来。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wish List]]></title>
    <link href="http://guori12321.github.io/blog/2013/11/02/wish-list/"/>
    <updated>2013-11-02T19:18:00+08:00</updated>
    <id>http://guori12321.github.io/blog/2013/11/02/wish-list</id>
    <content type="html"><![CDATA[<p>大四上学期，永远是那么焦虑，赶不完的deadline，各种很心动但很难争取到的机会&hellip;如果，能活着度过这个学期，如果，下学期可以很轻闲，那么，我要一点点的，去做下面的事情</p>

<!--more-->


<h2>乱七八糟</h2>

<ul>
<li><p>研究下单反的使用，PS的初阶</p></li>
<li><p>学跳舞啊学跳舞！！什么快三慢三快四慢四，什么拉丁什么伦巴！！</p></li>
</ul>


<h2>做点好玩的项目</h2>

<ul>
<li>研究下<a href="http://www.byvoid.com">byvoid</a>的博客，去看看他做过哪些厉害的项目</li>
</ul>


<h2>搬砖技能的提升</h2>

<ul>
<li>看看算法导论，编译原理</li>
<li>看看各种数据挖掘的算法</li>
<li>找找长期并且靠谱的外包</li>
</ul>


<p>未完待续&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[土豪大学]]></title>
    <link href="http://guori12321.github.io/blog/2013/10/24/tu-hao-da-xue/"/>
    <updated>2013-10-24T22:07:00+08:00</updated>
    <id>http://guori12321.github.io/blog/2013/10/24/tu-hao-da-xue</id>
    <content type="html"><![CDATA[<p>上帝说，要有土豪，然后，有了KAUST。</p>

<p>今天晚上听了KAUST的宣讲，心情久久不能平静。激动着心，颤抖着手，我还是写篇日志记录下这个过程：</p>

<!--more-->


<p>和所有国外高校的宣讲一样，来了几个中国的老师，几个外国的老师。大家的目光，都在搜索，说好的<strong>来了就给32G U盘</strong>的U盘，到底在哪里!</p>

<p>第一排没坐满，KAUST的老师招手，让我们坐到第一排边上的两个位子上，然后我就过去了&hellip;得到了一个比较好的视野。在KAUST的老师做基本介绍时，他拿出了个U盘，说&#8221;这是我们的一点小小心意，不过，你们肯定不是为了这个来的&#8221;。我果断的点点头。是的，我是为了<strong>U盘</strong>和<strong>抽ipad mini</strong>的机会来的。然后，他又拿出来了一个小盒子，ipad mini，然后说，“我们还带来一个小礼物，ipad mini，这个是从沙特带来的，上面都是阿拉伯语”。边上一哥们很机智的问了一句<strong>是纯金的吗</strong>。不是纯金的我也要！</p>

<p>接下来，是常务副校长（应该是吧），来介绍一下KAUST。这个就很常规了。KAUST因为在沙特，比较偏重海水淡化一类的化学和环境科学的研究。介绍了半天他们的各种NB实验室，但很少涉及到CS的。也讲到了他们的学生有多么好找实习，但，那些都是<strong>石油</strong>相关行业的。什么世界最大石油公司，什么什么的，总之，中石油跟人家就不是一个档次。我考虑了下转行去做石油，只可惜，当初年少不懂事学了CS啊！</p>

<p>之后是学生生活的介绍。工大的学生，在这种场合下，很容易激动。对于住在有着60年历史的二公寓的孩子，我们，是有理由激动的。什么<strong>海景宿舍</strong>，单人间，听学长说，还是一人<strong>三层</strong>的，带着各种电视电脑什么的，什么高端大气上档次的图书馆，有着落地窗的<strong>海景自习室</strong>，在香港我也看习惯了，只是，照片上看着，还是比香港的高级好多。介绍到学生的活动时，什么<strong>潜水</strong>，什么<strong>高尔夫球</strong>，老师说，我们来KAUST，不是为了打高尔夫，但是，我们来了，确实可以打。工大的同学，就像坐过山车一样，我身后不时传来各种<strong>哇塞</strong>。同样是学生，回到了有着优良传统的二公寓，一下子觉得落差，好大。</p>

<p>另外这位副校长同学，反复强调，来KAUST，不是让你成名，而是给你一个成名的机会,我们一起来改变世界什么的。大家脑补下我们是怎么宣传社会主义的优越就好。</p>

<p>在这位老师讲的空隙中，有工作人员收集了我们填的个人信息，邮箱什么的，然后抽<strong>ipad mini</strong>。全场都静了。最后是一位学号以110开头的同学拿到了。RP啊！</p>

<p><img src="http://guori12321.github.io/images/KAUST0.jpg" width="500"></p>

<p>接下来是一位环境科学的老师，来讲他做的东西。本来他很想用汉语介绍，一看现场对这个建议兴趣不大，就还是用英语了。你有本事你用<strong>陕西话</strong>讲啊！！之后一位女老师，是CS的，竟然还是data mining的！听着她讲各种big data对于人类文明的意义啊什么的，我赶紧查了下手机，结果发现当时我看的KAUST的文章没有一篇是她写的&hellip;不管了，一定要去套一下磁~~</p>

<p>再之后，就是一位本科吉大，在KAUST硕士毕业的学姐，来介绍下她的生活。她给我的印象，很像某位同学，都是胖胖的脸，大大的眼睛，极其优雅的英语，以及隐隐约约的女王气场。当时打工的时候没少被某同学踹&hellip;具体说的就是，什么来了KAUST就有了各种possibility啊。想想在沙特，和各国的同学，一起上学，挑战困难的课程，去潜水，去打高尔夫，去在通宵的图书馆里看太阳从红海升起，去欧洲交换，去美国实习&hellip;太多太多想都想不到的机会。我是多么向往这种生活节奏。</p>

<p><img src="http://guori12321.github.io/images/KAUST1.jpg" width="500"></p>

<p>在这位学姐讲的时候，前三排的同学，都拿到了32G的U盘~~因为他们只带了一百个。32G啊，4个U盘顶我一台机子的硬盘了。这下就不用担心macbook air要不要安windows的问题了。U盘分出来30G安win7，再用2G来拷资料就够了。</p>

<p>最后是Q&amp;A环节。我问了下，CS的学生，实习机会多吗？副校长同学说，多，&hellip;但再怎么听着，也没有加州那边的学校有吸引力啊。毕竟开个车就去实习了。什么去IBM Research的同学很多，但在中国还是MSRA的名气更大吧。比较好玩的是，有个女生问，中国的学校和你们学校比，有什么区别。这哥们扯了半天，什么，你们都很优秀，我们来这些学校，因为这些学校的学生，最有可能在未来20年内带领人类做出新的贡献&hellip;最后回来，最大的区别，是，我们用<strong>英文</strong>上课。真机智啊。真有政治家的风范，避重就轻，还造成一种讲的很有水平的感觉。</p>

<p>接下来，就散场了，大家就围着老师套磁~~无比欢乐。KAUST的PHD项目，可以先读两年，然后决定是拿MS走人还是接着在KAUST读。这点很重要。我们实验室一哥们直接把打印好的CV和成绩单给了老师。老师说，这是她收到的第三份。之前在清华和中科大各有一位同学申请她的phd。我回来以后，也发了份CV过去。</p>

<p>欢乐的土豪大学的宣讲，就这么结束了。真心希望这种<del>抽ipad的</del>机会多一些。我甚至想着明天去合肥，接着抽。算了，安心研究在U盘上安windows吧。</p>

<p>PS:</p>

<ul>
<li><p>之前<a href="http://blog.renren.com/share/352882625/16531118673?from=0101010202&amp;ref=hotnewsfeed&amp;sfet=102&amp;fin=51&amp;fid=24005834040&amp;ff_id=352882625&amp;platform=0&amp;expose_time=1382669097">交大关于KAUST的宣讲</a>中提到，教育部不承认KAUST，在工大讲的时候，已经说承认了</p></li>
<li><p>在和那位CS的老师聊天的时候，她说，哈工大我们都知道是C9的高校。在场的工大同学都惊呆了，老师，您竟然知道C9和哈工大！！回来一查，这个老师的本科，果然是<strong>西交大</strong>&hellip;</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[滿滿的怨念]]></title>
    <link href="http://guori12321.github.io/blog/2013/10/23/man-man-de-yuan-nian/"/>
    <updated>2013-10-23T12:28:00+08:00</updated>
    <id>http://guori12321.github.io/blog/2013/10/23/man-man-de-yuan-nian</id>
    <content type="html"><![CDATA[<p>不想把自己的blog搞的太怨念。在我的构想中，我的blog应该是一个充满各种好玩事物的地方，有着各种技术，游记，以及书评影评等。可是，大部分的时候，生活，就是这么怨念。于是，就开这么一篇日志，专门记录各种怨念的小心情吧~</p>

<!--more-->


<h2>2013-10-23</h2>

<p>刚从工大的什么留学展回来。各个海外高校都有自己的一个展台，然后可以去咨询，要点宣传资料什么的。</p>

<p>于是，很自然，就遇到了很多熟悉的同学，于是，下面的对话，发生了很多次：</p>

<p>TA: 你GRE多少</p>

<p>我: &hellip;</p>

<p>TA: 你TOEFL多少</p>

<p>我: &hellip;</p>

<p>TA: 你GPA多少</p>

<p>我: &hellip;</p>

<p>TA: 你工作找了没？</p>

<p>我: 唯一的一份offer因为岗位不理想，已经拒了&hellip;</p>

<p>TA: 那你想怎么办？</p>

<p>我: &hellip;不好意思，我想去那个展台看看&hellip;</p>

<p>于是，我就在对方鄙视的目光中一点点走远。</p>

<p>对我这种英语不好，学分绩不高，智商不够，长得也不行的人，我是怎么有勇气活在这个世界上的！！！</p>

<p>哎&hellip;他们GT爱多少多少&hellip;过好自己的生活，走好自己的路&hellip;</p>

<p>还记得我仰慕很久的一位学姐，曾经说过，<strong>并不是因为有了希望才坚持，而是因为坚持，才有了希望</strong>。看着她在慕尼黑，在荷兰，在英国，在法国&hellip;的各种照片，觉得，这，才是人生赢家啊。</p>

<p>虽然今天还是一觉睡到了10点，但我还是想说，不要焦虑，努力干活吧。</p>

<h2>2013-10-26</h2>

<p>今天网上疯传一张照片，是byvoid同学的某公司的面试结果。他本人并不希望这张照片传出来。所以说，我就不贴图了。</p>

<p>好多人都在感叹，这差距，这辈子，估计是没希望了。我也觉得啊&hellip;小学三年级接触basic，然后NOI保送清华，然后facebook实习，期间的各种项目各种经历，真是很难复制。</p>

<p>但想想，差距，真的是在大学这四年中产生的吗？不，其实在小学的时候，就已经有了&hellip;看了他博客中关于湾区，关于电话英语的介绍，真是很好的机会，可是，现在的我，根本没有能力去做一样的事情。所以说，还是拜一拜就好。不过，还是有很多可以做的，比如说，开源项目。至少他证明了，在校生，做<strong>开源项目</strong>，可以做到怎样一种高度。再比如说，一直不停的，去<strong>寻找机会</strong>。看了人和事多了，想问题，自然也就不一样了。</p>

<p>再说说申请学校的事情。实在是纠结。硕士，真心读不起，PHD，下不了决心去读啊。读PHD出来以后，到底是做faculty，还是去企业工作，还是去各种各样的research center，太多的选择。虽然大三开始，就在研究生师兄师姐的办公室里待着了，在香港实习时更是在phd的屋子待着，但我还是不知道自己到底想做什么。昨天KAUST的宣讲，也很心动，选择太多了。</p>

<p>昨天晚上在某个群里喊了一句“拿到了BAT的普通offer，觉得人生没有了希望”，马上就一堆人说了相同的话。而BAT这三家中国的顶级公司，又是多少人的目标呢。但我真的看不到希望啊，特别是某位师兄在某公司干了一年然后出去读phd了，让我更不想去某家公司了。</p>

<p>纠结&hellip;</p>

<p>越来越怨念了。总之，一点点调整自己的生物钟，多干活就好~~</p>

<h2>2013-11-11</h2>

<p>记录下这混乱的几天。</p>

<p>今天是传统节日光棍节。忧伤的节日。晚上12点40睡的，一直刷支付宝刷不出来。阿里的架构真是NB，没有崩溃，只有各种很有节奏的错误。早上起来刷出来了，付钱买了双鞋。</p>

<p>昨天毕业设计开题答辩。碰到的三位老师都是比较看报告内容的，不像某组的老师，死抠格式，然后问各种像“你做这个项目就是为了毕业是吗？！”，这让人怎么回答啊，毕个业容易吗！不过，我的毕业设计，挂了一项973项目，一项863项目，一项国家自然科学基金项目，应该除了毕业还是有点用的。</p>

<p>答辩完，晚上吃完火锅后，一直在打坦克&hellip;</p>

<p>再前一天，中午找老师签字，然后溜达到思飞科幻社的社团办公室，正好他们打算去看电影，雷神2，就很开心的一起去了。在工大，能碰到这些和自己兴趣相同的人，真的很开心。电影本身倒是一般，有空看看吧，打分的话10分我给个7.5吧。倒是电影中乱入的美国队长实在欢乐。</p>

<p>晚上查了查学校的排名，然后就打坦克了&hellip;</p>

<p>再前两天，就是写开题报告，各种恶心。不少同学因为流程图和用例图，被狠批半天。我倒不担心图画的不对，我担心的是，像我这样一张流程图和用例图的人能不能通过开题&hellip;</p>

<p>总之，这几天，真是什么都没干啊！又陷入这种很焦虑还一点点都不想干活的状态了，真是作死啊！！！</p>

<h2>2013-11-16</h2>

<p>这个月真是不好过&hellip;KBS的投稿，TOEFL的考试，以及，最重要的，申请学校，都要在一个月之内搞定。</p>

<p>有时候想想，还是后悔，当年，怎么就浪费了那么多时间呢。如果早点遇到现在的老板，如果早一点努力，如果有一个像我一样认真负责的学长当年带着我来做东西&hellip;现在，我想，应该会有更好的前景吧。其实也不一定，自己的水平到底还是有限。</p>

<p>忙过这一个月，之后，就是1月中旬，去法国交换。在法国，肯定可以很高心的休养生息了~~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[这个雾霾的初冬]]></title>
    <link href="http://guori12321.github.io/blog/2013/10/21/zhe-ge-wu-mai-de-chu-dong/"/>
    <updated>2013-10-21T21:31:00+08:00</updated>
    <id>http://guori12321.github.io/blog/2013/10/21/zhe-ge-wu-mai-de-chu-dong</id>
    <content type="html"><![CDATA[<p>每年哈尔滨在入冬的时候，因为刚开始供暖，都会有很严重的污染。整个城市都被烟雾笼罩。而今年，格外的严重。</p>

<p><img src="http://guori12321.github.io/images/Harbin_pollution.jpg" width="500" title="image" alt="images"></p>

<p>上面那张，是我在实验室朝二公寓的方向照的。前两天，站在实验室，看不到远处的龙塔。现在，连二公寓都快看不到了。</p>

<!--more-->


<p>生活在这样的环境下，人生真的是无比的艰难啊。从实验室走到二公寓，再到天井里收个衣服，回来就感觉嗓子明显的不舒服。晚上睡觉的时候，也觉得吸入了很多的灰。第二天，带着我的N95口罩，无视一路上各种路人的围观，到食堂吃饭，嗓子倒觉得还好，倒是眼睛觉得痒，难道我还要再搞个防护眼镜吗？</p>

<p>和老师meeting的时候，捎带讲起来这个事情。老师指着窗外，说，几个事情赶到一起了，一个是供暖，刚开始热炉子，烧煤比较凶;农民这两天也开始烧秸秆了，再加上这两天的低压天气，没一点点的风和雨。于是，PM就爆表了。</p>

<p>本来计划着，大四没有课程，可以很专注的做些东西出来。只是，自己的作息，永远是晚上两点睡不着，上午10点自然醒&hellip;真是堕落啊，想想自己虚度了多少年华，不由的无比悔恨啊&hellip;</p>

<p>只是，生活还是要继续，deadline永远在那里，不远，很近。努力的活过这几天，调整好自己的生活，让我们相信，未来，一定是非常美好的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mac下安装LaTeX]]></title>
    <link href="http://guori12321.github.io/blog/2013/10/15/macxia-an-zhuang-latex/"/>
    <updated>2013-10-15T18:31:00+08:00</updated>
    <id>http://guori12321.github.io/blog/2013/10/15/macxia-an-zhuang-latex</id>
    <content type="html"><![CDATA[<p>LaTeX的重要性我就不多说了。这是最靠谱的写论文的方式，比Word靠谱多了。</p>

<p>我是参考<a href="http://blog.renren.com/blog/279888129/773543899">康同学的人人网日志</a>，来配置的。</p>

<!--more-->


<p>在Mac下安装Tex非常的简单，首先从<a href="http://tug.org/mactex/mirrorpage.html">源列表</a>里挑一个速度比较快的（我用的是日本的，平均500K的样子），然后打开安装就好。</p>

<p>安装后，打开TeXShop，就可以写TeX文档了。这时，我发现中文显示出来乱码，于是，<a href="http://blog.csdn.net/quantumpo/article/details/9317925">参考了这篇文章</a>，在TeXShop中，在<code>宏</code>下面的<code>Encoding</code>中，选择<code>UTF-8 Unicode</code>，之后就可以正常使用中文了。</p>

<h2>关于参考文献和bibtex</h2>

<p>折腾了一早上总算搞明白怎么在LaTeX里加入参考文献了。</p>

<p>其实很简单，比如说，你有两个文件，一个叫<code>main.tex</code>，一个叫<code>mybib.bib</code>，然后你要在前者中引用后者。后者是一个数据库，也就是说，你可以在后者中加入很多的东西，而不在tex中引用。我们编译的时候，也只针对tex编译，而不针对bib文件。</p>

<p>首先，在main.tex的\end{document}<strong>之前</strong>，加入</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>\bibliographystyle{model1-num-names} %选择bib的模板，也就是说，参考文献显示出来是什么样子。这种模板一般会由你要投稿的会议或期刊给出。
</span><span class='line'>\bibliography{mybib} %指定你要引用的bib文件，注意，这里**不加**.tex</span></code></pre></td></tr></table></div></figure>


<p>然后，是在你的bib文件中，写入你要引用的论文。在<a href="scholar.google.com">scholar.google.com</a>中可以直接粘出来符合要求的bib格式的引用，直接粘到你的bib文件中就好。不同的论文之间空上一行就好。比如说，下面这篇是我的某篇论文的bib引用</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>@incollection{guo2013cuvim,
</span><span class='line'>  title={CUVIM: extracting fresh information from social network},
</span><span class='line'>  author={Guo, Rui and Wang, Hongzhi and Li, Kaiyu and Li, Jianzhong and Gao, Hong},
</span><span class='line'>  booktitle={Web-Age Information Management},
</span><span class='line'>  pages={351--362},
</span><span class='line'>  year={2013},
</span><span class='line'>  publisher={Springer}
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>接下来，就是要在你的tex文件中引用这个bib中的论文。直接在要引用的地方，输入<code>\cite{something}</code>就好。在上面的例子中，是<code>\cite{guo2013cuvim}</code>。</p>

<p>这时，你已经完成了tex源代码上的操作。下来就是编译。要编译好几次(以下操作也可以在TeXShop中完成)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pdflatex main.tex %注意，是pdflatex，不是pdftex
</span><span class='line'>bibtex main %注意，这里是main，不是main.tex，也不是mybib或mybib.bib
</span><span class='line'>pdflatex main.tex
</span><span class='line'>pdflatex main.tex</span></code></pre></td></tr></table></div></figure>


<h3>总结一下容易出错的地方</h3>

<p>其实很多地方容易出错。</p>

<ul>
<li>在tex中引用bib文件时，不加.bib</li>
<li>在latex和pdftex时，要加.tex缩写名</li>
<li>在bibtex时，是针对tex编译，而不是bib文件，另外，tex也不加缩写名。</li>
<li>编译时，如果用pdftex而不是pdflatex，会报错。具体参考<a href="http://www.latex-community.org/forum/viewtopic.php?f=5&amp;t=3164">这里</a>。</li>
</ul>


<p>另外，在写tex时，有以下容易犯的错误</p>

<ul>
<li>对于下标，如a_b，如果不对单词b加{}，则latex只默认b中的第一个字母为a的下标，其它的字母是和a并列的。也就是说，当单词b多于一个字母的时候，我们要对它加{}。</li>
</ul>


<h2>在LaTeX中引用URL</h2>

<p>写论文的时候，有时候要在参考文献中引用一些网址（比如Stanford的SNAP组的数据）。<a href="http://tex.stackexchange.com/questions/35977/how-to-add-a-url-to-a-latex-bibtex-file">这里</a>很清楚的讲解了这个问题。</p>

<p>首先在tex中，/usepackage{url}，之后就在bib中插入下面的代码就好</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>@misc{bworld,
</span><span class='line'>  author = {Ingo Lütkebohle},
</span><span class='line'>  title = ,
</span><span class='line'>  howpublished = "\url{http://aiweb.techfak.uni-bielefeld.de/content/bworld-robot-control-software/}",
</span><span class='line'>  year = {2008},
</span><span class='line'>  note = "[Online; accessed 19-July-2008]"
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h2>在LaTeX中用Mathtype</h2>

<p>简单的公式，我也就手写了。可是，复杂的公式，手写完自己都读不懂了。还是老实的用Mathtype吧。</p>

<p>Mac下的Mathtype的安装也十分简单。只是，在Mathtype中写好公式，要粘到LaTeX中，要专门设置一下，不然粘出来的东西很奇怪。</p>

<p>在Mathtype中，找到<code>Preference</code>，再选<code>Cut and Copy Preference</code>，之后选中第二栏<code>MathML or TeX</code>，下拉菜单中选<code>Plain TeX</code>,下面的两个打勾的框都不要打勾。这样，在Mathtype中写好公式，就能直接粘到tex文件中。</p>

<h2>在LaTeX中引用图像</h2>

<p>首先引用包</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>\usepackage{graphicx}</span></code></pre></td></tr></table></div></figure>


<p>然后就可以使用以下的语句在需要的地方引用图像了。我只试过png图像(在figures文件夹下的figure1.png)是可以的，其它的<a href="http://bbs.sjtu.edu.cn/bbstcon,board,TeX_LaTeX,reid,1254670022.html">参考这里</a>。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>\begin{figure}
</span><span class='line'>    \centering
</span><span class='line'>    \includegraphics[width=1\textwidth]{figures/figure1}
</span><span class='line'>    \caption{The Updating Ratio of an Inactive Account}
</span><span class='line'>    \label{figure:inactive}
</span><span class='line'>\end{figure}</span></code></pre></td></tr></table></div></figure>


<p>之后引用图像的时候，用<code>Figure ~\ref{figure:inactive}</code>就能引用了。</p>

<h2>使用表格</h2>

<p>下面是一个使用表格的例子</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>\begin{table}
</span><span class='line'>\centering
</span><span class='line'>    \begin{tabular}{|c|c|c|c|}
</span><span class='line'>            \hline
</span><span class='line'>            Weight & Message Number & Total Crawl Time & Avg \#Msg. with 1 crawling \\
</span><span class='line'>            \hline
</span><span class='line'>            0.9 & 1451435 & 50421 & 28.79 \\
</span><span class='line'>            \hline
</span><span class='line'>    \end{tabular}
</span><span class='line'>    \caption{The Hash Model Experiment Results}
</span><span class='line'>    \label{table:hash}
</span><span class='line'>\end{table}</span></code></pre></td></tr></table></div></figure>


<p>与图表一样，之后引用的时候，用<code>Table ~\ref{table:hash}</code>。</p>

<h2>引用伪代码</h2>

<p><a href="http://blog.renren.com/share/302655693/15587298311">这篇清华科协的人人网日志</a>讲的非常清楚。如果安装MacTeX时，是安装的完整版，则不用下载要用的包，MacTeX本身就已经带了。</p>

<p><a href="http://www.cs.dartmouth.edu/~thc/clrscode/clrscode.sty">伪代码包的文档</a>，也许需要用。</p>

<h2>在公式中加入文字</h2>

<p>用<code>\mbox{}</code>，例子如下</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$$
</span><span class='line'>\sum Part_0 - \sum Part_1 = \left\{ \begin{array}{ll}
</span><span class='line'>        0 & n \ \mbox{mod} \ 4=0 \\
</span><span class='line'>f_0 & n \ \mbox{mod} \ 4=1 \\
</span><span class='line'>-\Delta & n \ \mbox{mod} \ 4=2 \\
</span><span class='line'>f_0-\Delta & n \ \mbox{mod} \ 4=3 \\
</span><span class='line'>\end{array} \right.
</span><span class='line'>$$</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac air 13感受]]></title>
    <link href="http://guori12321.github.io/blog/2013/10/14/mac-air-13gan-shou/"/>
    <updated>2013-10-14T23:41:00+08:00</updated>
    <id>http://guori12321.github.io/blog/2013/10/14/mac-air-13gan-shou</id>
    <content type="html"><![CDATA[<p>作为在香港的第二个月工资，我纠结再三，还是买了Macbook Air 13。在香港本身价钱就便宜一点，再加上在香港是大学的职员身份，还可以再优惠一点。8000港币（6400人民币左右）的价格还算可以忍。而air的性能，我想也足够我日常使用了，很久都没有碰到让我心动的大型游戏了，而平时跑程序我可以在服务器上跑，不管是中大还是工大，需要的时候都可以用集群机。再加上身边所有买mac的人都告诉我，真的很值。最后，还是买吧~</p>

<!--more-->


<h2>Mac初体验</h2>

<p>比较轻薄。拿久了并没有感觉，但和原来的笔记本对比一下，一下就觉得特别明显。Mac的工业设计，有着最为独到的质感，整个笔记本感觉就像工艺品一样，打破了我对传统笔记本的印象。一直不知道它的风扇的换气口在哪里，看了帖子后才发现，是在屏幕的转轴的位置。喇叭也在这里，这样声音经过屏幕反射后，再传入耳朵，就不会觉得奇怪了。</p>

<p>电池是13寸air的亮点之一。号称12小时续航。同学实测说是全功率跑着也能用9小时以上。我没有测过，不过确实很high~</p>

<p>背光键盘也算是业界良心。本来我觉得这个功能并不实用，毕竟顶级的程序员都用不刻字的键盘。后来晚上写博客的时候发现，一些特殊的符号，比如^&amp;什么的，我还是要找一下才能打出来。晚上，特别是熄灯后，用夜光键盘，有着特别的情调。</p>

<p>之后要说触摸板。在Win下我也不怎么带鼠标，觉得麻烦。Mac的触摸板更大，更光滑，也更灵敏。这是一种全新的交互的体验。多指的不同的滑动方式，实现了各种常用的操作。只是，这触摸板过于高端，我都不怎么舍得按下去。</p>

<p>Mac，像很多Linux的桌面环境一样，是支持多个桌面的。比较特殊的是，你可以点击大部分应用程序的右上角，将它们全屏显示到一个新的桌面下。比如说我现在就是在全屏的Vim下写作。这样可以避免其它的干扰，你甚至无法看到系统状态栏中的时间。如果要切换出去，直接四指滑动就好。非常赞的设计~</p>

<h2>Mac的不足</h2>

<p>首先是键盘的适应问题。因为键位与Win的键盘不同，需要特别的适应。比如说，Ctrl键，在这里就是Command键。但在Vim下，Ctrl+ [ 要按Control+ [。再比如一些很常用的键，如Page Up，Home，都没有。</p>

<p>其次是应用软件的多少。其实Mac下的软件并不见得比Win下少，只是Mac下软件的收费比较高。换句话说，破解起来比较费力。但用破解软件真的不是好行为。另一方面，Win下也存在破解的情况。</p>

<p>再之后是文件系统的问题。对于NTFS，Mac是只能读不能写。只有exFAT是Mac和Win都可以读写的。对于U盘，我直接格掉就好。但对于移动硬盘，特别是我的1T的硬盘，我就不能直接格了，数据的备份就很麻烦了。</p>

<p>总之，我喜欢Mac~~</p>

<h2>将Home文件夹加入finder</h2>

<p>在OS X的10.6版本后，finder中并没有home文件夹。这让我很纠结。</p>

<p>以下方法可以把home加入finder中。
<a href="http://forums.macrumors.com/showthread.php?t=1345541">参考的是这个帖子</a>。</p>

<p>Press CMD+SHIFT+H to enter your Home folder in Finder, then press CMD+ArrowUp to get into the Users folder, from there drag the folder of your choice to the Sidebar.</p>

<h2>Shell高亮</h2>

<p>参考<a href="http://linfan.info/blog/2012/02/27/colorful-terminal-in-mac/">这篇文章</a></p>

<h2>输入法</h2>

<p>五笔的话，试了一圈，还是百度的最舒服，而且可以和手机上的输入法同步词库</p>

<h2>RAR解压</h2>

<p>我用的是<a href="http://www.kekaosx.com/zh-cn/">keka</a>，免费，开源，不过从APP Store里下载要收费。这个和mac自带的解压软件一样，点击rar后，就自动解压了，而且文件名不会乱码。</p>

<h2>rm</h2>

<p>我多次因为rm和mv打错，造成很严重的后果。后来同学们给了我两个建议。</p>

<p>FQJ: 搞一段bash命令，每次rm的时候，都输入验证码。我表示无语。</p>

<p>某学长: alias rm=&lsquo;trash&rsquo;</p>

<p>于是我就把rm绑到trash上了。</p>

<p>首先是安装<a href="http://www.dribin.org/dave/osx-trash/">osx-trash</a>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://www.dribin.org/dave/osx-trash/</span></code></pre></td></tr></table></div></figure>


<p>之后在<code>.bash_profile</code>中加入</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>alias rm='trash'</span></code></pre></td></tr></table></div></figure>


<p>就好。之后通过<code>-l</code>参数查看废纸篓，<code>-e</code>清空。下面是官网给出的例子</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% touch foo bar baz
</span><span class='line'>% trash -l
</span><span class='line'>% trash foo ba*
</span><span class='line'>% trash -l
</span><span class='line'>/Users/dave/.Trash/foo
</span><span class='line'>/Users/dave/.Trash/bar
</span><span class='line'>/Users/dave/.Trash/baz
</span><span class='line'>% trash -e
</span><span class='line'>% trash -l</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我的摄影路线图]]></title>
    <link href="http://guori12321.github.io/blog/2013/10/14/wo-de-she-ying-lu-xian/"/>
    <updated>2013-10-14T12:03:00+08:00</updated>
    <id>http://guori12321.github.io/blog/2013/10/14/wo-de-she-ying-lu-xian</id>
    <content type="html"><![CDATA[<p>在香港实习，拿到第一个月的工资的时候，我就做了一件梦寐以求的事：买单反。有些事情，我们会后悔做了，有些事情，我们会后悔没做。一直想用精美的照片来记载那些一点点流逝的岁月。如果说买单反真有什么后悔的，那就是，买的太晚了。</p>

<p>经喵叔推荐，在D3200，D5200中摇摆了一阵子，最后决定多花点钱买D5200好了。其实在D5200和700D中我也摇摆了好一会，后来觉得佳能的入门机确实不怎么地道，参数上比D5200差了很多，多加的功能如触屏对焦，单反真的需要这个功能吗？？</p>

<p>下面是我的摄影路线图~大家见笑了。</p>

<!--more-->


<h2>学习资料推荐</h2>

<p><a href="http://camerasim.com/camera-simulator/">一个还不错的单反模拟网站</a>。之所以说还不错，是因为这个模拟起来还是很不爽，不能直接对照之前模拟出的照片。</p>

<p>待续</p>

<h2>各项基本参数</h2>

<p>相机上有很多照相时基本参数的设定。每项参数都有不同的作用。多照一些，多试试，就会对这些参数有感觉了。</p>

<ul>
<li><p>快门速度: 这个比较好理解，就是照相时，快门打开多久。时间越长，照片就越亮，同时手抖的影响就越大。</p></li>
<li><p>光圈大小: 就是打开快门的时候，入光孔的直径大小。它和快门速度，一起决定了曝光量的大小。同时，由于小孔成像的原理，光圈对于景深(就是相片中背景的虚化程序，景深越小，则相片中清晰的范围越小，背景越模糊)，有着重要影响。光圈越小，背景就越清晰，光圈越大，背景就越模糊。注意，为了量化光圈大小，人们搞了个叫光圈值的东西，也就是f4，f8这种f后面的数值。而光圈值和光圈是反比的关系。也就是说，光圈值越大，光圈越小。我相信你已经看晕了，我也是。</p></li>
<li><p>ISO: 这个叫感光度。实际上相当于把光学信息放大的倍数。也就是说，感光度越高，就只需要越少的光，同时画质也会越差。它的作用相当于扩音器，把人的声音放大，但这样，也同时放大了噪音。ISO高的时候，色彩会变得很差，同时会有大量的噪点。</p></li>
<li><p>白平衡: 也就是说你的照片是偏红还是偏蓝。一般来说，发红的照片让人觉得非常的温暖，而发蓝的让人感觉冷。</p></li>
</ul>


<p>我现在照相，还处于用A档，开最大光圈，如果光线比较暗再把ISO调大一点的水平。</p>

<h2>关于后期</h2>

<p>一点都不会！！所以说，待续&hellip;</p>

<h2>关于PS CS5报错</h2>

<p>在打开Nikon的NEF格式的图片时，报错</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>无法完成请求，因为该文件似乎来自于已安装版本的 Camera Raw 不支持的相机型号。
</span><span class='line'>请访问 Camera Raw 帮助文档以获取更多信息。</span></code></pre></td></tr></table></div></figure>


<p>然后就去官网下了各种<a href="http://www.adobe.com/support/downloads/product.jsp?platform=Macintosh&amp;product=106">Camera Raw和DNG Converter</a>，然后发现，还是打不开&hellip;</p>

<p>其实，Camera Raw，是一个独立的程序。先把NEF格式的文件，用它转化为DNG格式，再用PS打开DNG格式的就好。并不是说安了它以后，PS就能直接打开NEF了。当然，也有能直接打开的办法，但那好像需要CS6以上的版本了。我没有试过。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我所仰慕的Blog们]]></title>
    <link href="http://guori12321.github.io/blog/2013/10/14/wo-suo-yang-mu-de-blogmen/"/>
    <updated>2013-10-14T10:22:00+08:00</updated>
    <id>http://guori12321.github.io/blog/2013/10/14/wo-suo-yang-mu-de-blogmen</id>
    <content type="html"><![CDATA[<p>Blog自古以来，就是广大人民群众喜闻乐见的学习交流平台~在各大社交网络盛行的今天，博客依然有着自己独到的优势。比起SNS的浮躁（永远有太多太新太好玩的事情，因此没办法去对这些事情做更深入的了解），我更喜欢用博客来记载自己的生活。虽然写出来也很少有人看，但至少来看的人，都是比较关心我或者博文中提到的事情的。</p>

<p>下面就来讲讲那些我所仰慕的Blog们~</p>

<!--more-->


<ul>
<li><p>第一位当然是<a href="http://www.matrix67.com/">Matrix67的博客</a>。我知道的所有OIer多少都参考过他写的位运算的资料。作为一个OI界不朽的传说(文科生，OI保送，或者说是因为编程保送北京大学，还是中文系)，他的博客可以说影响了几代(年级)人。他的博客上最多的是各种好玩的数学题目，同时也有一些美剧之类的，总之很好玩~</p></li>
<li><p><a href="http://sizheng.org/">小雪的博客</a>。知道小雪，是因为她拿了微软编程之美2013年的冠军。话说那次比赛，只有三个女生入围&hellip;(PS: 我做过2012年的编程之美，初赛首轮就挂了&hellip;再之后就没做过&hellip;)。她的Blog真是清新唯美~并且配了很多她自己拍的照片。真的好神奇~~</p></li>
<li><p><a href="http://www.yinwang.org/">王垠的博客</a>。这位大神经常发表各种很突破的观点。他的phd好像quit了两次了吧，不知道现在怎么样了。知道他是因为他的那篇著名的<a href="http://www.cnbeta.com/articles/76147.htm">完全用Linux工作</a>。虽然很偏激，但也确实很值得读。不过他的博客，好多基本功能都没有，比如说返回首页什么的。</p></li>
</ul>


<p>未完待续~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[小米2S的使用感受]]></title>
    <link href="http://guori12321.github.io/blog/2013/10/13/xiao-mi-2sde-shi-yong-gan-shou/"/>
    <updated>2013-10-13T23:18:00+08:00</updated>
    <id>http://guori12321.github.io/blog/2013/10/13/xiao-mi-2sde-shi-yong-gan-shou</id>
    <content type="html"><![CDATA[<p>在香港实习的时候，实在无法忍受NOKIA E63不带GPS，无法导航的问题，于是，在香港买了一部小米2S(虽然买到以后我因为没有香港身份证，不能上台，办不了手机流量，一样没办法导航&hellip;)。小米香港的商网就是<a href="xiaomi.hk">xiaomi.hk</a>，定起来也比较麻烦，一会有货一会没货的，还不能用大陆的信用卡来支付。后来让实验室的师兄帮我付了。价格比大陆贵了几十块，但起码能抢的到。于是，就很开心的换新手机了~~</p>

<!--more-->


<h2>2S的直观感受</h2>

<p>拿到手上，想像中要厚和重一些。不过这些都无所谓。塑料的后盖，摸上去还算有质感，只是拆开以后就觉得，只是薄薄的一层塑料了。说到拆盖，真是很技巧，不只一个同学告诉我拆小米的盖子非常困难，主流的做法反而是用指甲沿着盖子划一圈。其实用大拇指和食指就足够，食指跪在后盖MI Logo附近，然后大拇指使点劲就搞定了。</p>

<p>开机后，感觉屏幕挺不错，不管是分辨率还是可视角度，都挺好，至少比E63强多了。跑了几个自带的APP，速度上并不卡。一些游戏加载比较慢，但跑起来也不卡。</p>

<p>不过玩的时间长了以后，散热比较大。用手握着就十分不舒服了。这个时候，就休息下，一方面散热，另一方面，也是保护眼睛~</p>

<h2>关于MIUI</h2>

<p>小米一直主打MIUI，用它自己的话说，MIUI才是它的核心竞争力。坊间传说，MIUI还是比较好用，比较方便。我没用过其它安卓手机，只能说，我觉得MIUI做的还算方便。一些主要的功能，比如说开启WIFI，直接就是状态菜单中的一个按钮，点一下就好了。自带的流量统计真是业界良心，在中国的移动运营商丧尽天良的时候(香港上台的手机号，一个月60块，1700分钟本地通话，不限流量)，有这么个功能，我们可以省多少流量钱。</p>

<p>小米有很多用户非常需要的功能，这是多少次迭代之后的产物，当年的MIUI可是每周都有更新。。用了MIUI，就不用再装各种手机管理软件了。但是，MIUI据说还是卡。身边也有同学刷Ubuntu的，据说刷了之后，明显快多了。</p>

<h2>2S的缺点</h2>

<p>有这么几点非常重要的缺点：</p>

<ol>
<li><p>当电量耗尽而关机后，要经过很长时间充电才能再次启动手机。也就是说，电池的用电保护做的不好。我去厦门玩的时候，晚上没关机，早上刚出车站，把手机插上移动电源，然后发现很久都无法开机。还好我当时带着E63，还能联系到朋友。之后每当手机快没电时我就关机，免得出现类似情况。</p></li>
<li><p>偶尔会死机。我在一次电话面试中，电话打到一半手机就死机了。平时还好说，但这种情况下真是不能忍。</p></li>
<li><p>APP有时会意外退出。这个问题每天都能碰到。主要是知乎的客户端，刷到一半就挂掉了，很不爽。</p></li>
<li><p>发热和耗电。这个可以说是安卓手机的通病吧。但小米不能忍的一点是，<strong>插着电</strong>，开着WIFI玩3D游戏，玩着玩着因为<strong>没电</strong>关机。这也太神奇了！</p></li>
</ol>


<h2>2S的APP推荐</h2>

<p>微信QQ什么的就不多说了，推荐一些比较小众但好用的软件。</p>

<ul>
<li><p>Any DO. : 这是Sunner推荐的GTD软件。用着确实方便。它再加上Google Calcander，已经满足我的需要了。</p></li>
<li><p>Evernote : 很有名的软件。只是我还不太明白怎么使用这种笔记类软件，手机上的便贴对我已经够用了。</p></li>
</ul>


<p>其它的想起来再说~大家也一起推荐吧~~</p>

<p>就先写这么多。其实小米3已经出来了，2S用的人也会越来越少了。写这篇博文全当是一个记录了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[找啊找工作]]></title>
    <link href="http://guori12321.github.io/blog/2013/09/17/zhao-a-zhao-gong-zuo/"/>
    <updated>2013-09-17T14:55:00+08:00</updated>
    <id>http://guori12321.github.io/blog/2013/09/17/zhao-a-zhao-gong-zuo</id>
    <content type="html"><![CDATA[<p>刚刚面完某国内的大型软件公司测试部门的四面，是HR面，谈谈毕业时间，对工作期望什么的。然后就是等结果了。从七月下旬，到九月中旬，这个事情耽误了很久。期间因为来香港实习，没能安排三面，后来HR又写邮件给我，再接着面试。总之算是一段不错的经历。下面来讲讲自己关于这次面试的感受:</p>

<!--more-->


<h2>面试的难度</h2>

<p>因为我这个算是校招的提前批，所以除了一面问了几个技术问题，二面就只问了一个，三四面就谈人生谈理想了。技术问题的难度并不大，不会的话也不要紧，把自己的思路说出来就好。</p>

<p>一面是女面试官，问我，你是怎么理解XXX的。我答，什么是XXX？没听过，简单介绍下吧&hellip;她说，啊？好，我们过。我觉得她的声音好萌好萌啊～二面和三面都是男面试官，四面是女HR，对于女面试官，我明显更有热情，说的更多啊&hellip;二面的问题，我没有想到标准的解法，想出的是同一时间复杂度，但常数很大的算法。后来看来是没有影响我的面试结果。</p>

<p>关于一面和二面中的技术问题，都是很传统很常规的面试题，如果真心准备找工作的话，这些问题都应该是原题才对。我面试的时候前三面都是打电话，四面是skype语音，一行代码都没有写。但我觉得，还是像国外公司那样，写写代码比较靠谱。</p>

<h2>面试的细节</h2>

<p>细节这个东西，还是尽量注意吧。比如说，把自己邮箱的发件人姓名设置好（以前我都是直接用汉语，现在用的是拼音，姓在前，大写，这也是这家公司的发件人的设置）。简历最好还是中英两份，做成一个pdf（除了MSRA要求是中英，其它公司都要求汉语或英语就好，但国内公司如果有英文简历肯定会让面试官更有好感）。</p>

<p>比较重要的，是<strong>电话一定开机</strong>。这家公司没给我发过短信，都是直接打电话的。不要想着公司会主动找你，如果你的电话打不通，他们就去联系能打通电话的人了。我因为在香港，大陆电话接不到，HR又写邮件联系我，但我当时二面已经通过。如果没有通过的话，可能就失去这个机会了。</p>

<h2>面试的感觉</h2>

<p>这家公司很接地气，或者说这家公司很不靠谱。HR要了我的skype，为了保险，还要了我的QQ(当年在工大，HR留了个QQ邮箱，大家都以为是骗子&hellip;)。写邮件过了两天还没回，我打电话过去，她说她现在很忙，如果今天晚上还没给我安排面试，就晚上再催她下。虽然感觉不靠谱，但至少HR在用她自己的方式在解决问题。所以还是很感谢的。</p>

<p>另外，这家公司也算是中国最顶级的了，但三四面前，两位不同的HR都联系过我，要我在香港的联系方式，他们内部都没有沟通过吗？搞的我每次都要强调自己要去/已经在香港，而且下次还会再问我在香港的电话的。</p>

<p>总体上，感觉和国外的公司，差距太大。</p>

<p>最后说一点，投简历什么的，不要怕挂。我曾经投了很多次简历，都没人理会，搞的我质疑自己能力了。但这次面试，至少算是对我的一个认可吧，让我知道自己还不是太弱。</p>

<p>祝大家找工作什么的愉快～</p>

<h2>另一家公司</h2>

<p>企鹅公司突然在前两天打电话给我，是互动娱乐IEG事业群的面试官。
刚刚一面完，就是各种谈项目，以及，你怎么理解数组和list的区别这种信口开河的问题。</p>

<p>最后问了下面试官，我有什么不足的地方，想在毕业前弥补下。他说，感觉你语速比较快，其实这种面试，可以再<strong>放松</strong>些。想想也是，程序员面试程序员，哪有那么苦大仇深。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于Scott Young学习方法]]></title>
    <link href="http://guori12321.github.io/blog/2013/09/14/guan-yu-scott-youngxue-xi-fang-fa/"/>
    <updated>2013-09-14T18:11:00+08:00</updated>
    <id>http://guori12321.github.io/blog/2013/09/14/guan-yu-scott-youngxue-xi-fang-fa</id>
    <content type="html"><![CDATA[<p>这两天整理邮件，翻出来Scott Young的one-week learn faster bootcamp的邮件。Scott Young以<a href="http://blog.renren.com/share/287284388/14623696425">他的MIT挑战</a>而知名。我第一次也是在人人网上看到关于他的帖子。想了解他和他做的事情已经很久了，周六就来看看这七封邮件吧。他在<a href="http://www.scotthyoung.com/blog/day-1-bootcamp-2013/">他的网站上</a>发布了这些内容。</p>

<!--more-->


<h2>Day 1: The principle you can use to amplify your focus and stop procrastinating</h2>

<p>首先是讲了些拖延症的生理上的解释。拖延症，与传统意义上的懒不一样。懒，是个十分舒适的词，但拖延症，我的感觉是，非常的煎熬，相当于把应该用来干活的时间，都用来思路斗争，结果就是，活没干完，自己也非常难受，之后再无比的自责。说起来，就是这么简单的一个循环。大家都知道，早点干活，之后就轻松，但，真做起来，对我来说还是非常难。</p>

<p>扯远了。Scott讲，人之所以不能专注，并不是说我们懒，而是说，大脑内是有一些维持我们注意力的资源，当这种资源短缺时，我们就难以专注。实验表明，多喝点带糖的饮料，都能使人更专注。那么，专注，就不是一个天赋的问题，而是一个技巧的问题：怎样才能不断的补充自己的维持注意力的资源。</p>

<p>除了简单的喝糖水外，我们可以通过压缩学习时间的方式来达到这一目的。这就像老师从小教导我们的：先写完作业再玩一样。Scott说，他晚上七点以后从来不学习，周六也绝不看书（老外的每周从周日开始，所以周六是每周最后一天）。这样，其实每周六天，每天10小时的学习，并不算夸张。有时候我们效率低的原因，就是因为安排的时间太多，搞的自己太累。</p>

<p>邮件的其余部分就没什么新意了。就像老师从小教导的那样，对于知识，要<strong>理解</strong>。用他的话来说，尽量让<em>消极(passive)</em>的任务变得<em>积极(active)</em>一些。比如说，看书的时候，每看一页，就回忆10秒，这页主要讲了啥。另外，看书的时候，要多反思，想想自己没搞明白的地方是哪里。邮件的最后给大家留了个小作业：找点自己要学的东西，并反思怎么改进自己的学习方法。</p>

<p>说实话，这些大道理，搞的像中学老师经常唠叨的一样。</p>

<h2>Day 2: How to remember huge quantities of information quickly and permanently</h2>

<p>今天的题目比较有意思：记忆。对被GRE伤害过好久好久，并因此不停质疑人生意义的我来说，满满都是泪啊！</p>

<p>同Day 1一样，刚开始同样是颠覆一个常识观点：记忆力，是可以训练的。举的例子是，Joshua Foer在研究并准备了一年之后，拿下了2005年美国记忆比赛的冠军，而他之前的记忆力只是平均水平。诀窍就是：形象的东西好记，枯燥的东西难记。之后他给了几个小技巧，如联想记忆，分组记忆等等。</p>

<p>感觉没多少有用的啊&hellip;</p>

<h2>以下我有心情再看&hellip;</h2>

<p>Day 3: Develop the deep intuitions that allow you to &ldquo;get&rdquo; any subject</p>

<p>Day 4: Why the 10,000 hour rule is broken (and how to learn skills faster)</p>

<p>Day 5: How to have total confidence in your knowledge</p>

<p>Day 6: The routine I used during the MIT Challenge to learn hard classes in under a week</p>

<p>Day 7: The most important tool for learning better</p>

<h2>一点感受</h2>

<p>我想，对我来说，最重要的并不是具体的方法，而是简简单单的，少想，多做。现在的各种正能量的帖子泛滥，什么“你不逼自己一把就永远不知道自己有多优秀”，什么“你必须十分努力才能看起来毫不费力”。真正的世界是，你必须十分努力，才能显得别人毫不费力。永远想live life to the fullest，然后把计划安排的满满的，直到自己再也不可能实现为止，然后就拖延着什么都不做，于是在期望与失望中纠结的度过一天天。何必想那么多，做些自己能做到的，就足够了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于linux常用命令]]></title>
    <link href="http://guori12321.github.io/blog/2013/09/11/guan-yu-ssh/"/>
    <updated>2013-09-11T16:23:00+08:00</updated>
    <id>http://guori12321.github.io/blog/2013/09/11/guan-yu-ssh</id>
    <content type="html"><![CDATA[<p>ssh这些linux常用的命令，大家应该都听过，但我自己一直不怎么会用&hellip;</p>

<p>现在在香港实习，就要多多的请教啊～～</p>

<!--more-->


<h2>ssh</h2>

<p>ssh username@ServerDomain 然后输入密码就好&hellip;</p>

<h2>ssh key配置</h2>

<p>在home下建立.ssh文件夹，然后通过下面的scp命令把本地的ssh pub key拷到这个文件下。
之后通过<a href="http://blog.csdn.net/haydenwang8287/article/details/1753883">chomd命令</a>来给.ssh文件夹一些权限：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>chmod 700 .ssh # 只有所有者有读和写以及执行的权限</span></code></pre></td></tr></table></div></figure>


<p>之后使用cat命令把拷过来的pub key拷到.ssh下的authorized_keys文件中去
&lsquo;&rsquo;&lsquo;
cat _rsa.pub >> authorized_keys
&rsquo;&lsquo;&rsquo;
之后再ssh时就不用输入密码了。</p>

<h2>ssh -D</h2>

<p>因为一些众所周知的原因，我们经常要翻来翻去。翻墙最快捷的方法还是物理翻墙，但如果暂时没办法物理翻，那就只能各种代理了。
<code>ssh -D</code>，传这个参数，就相当于在本地搞了个代理的端口，然后把网络流量导向这个端口就好。</p>

<h2>ssh Config</h2>

<p>ssh时要输入用户名和密码。我们可以通过上面提到过的ssh key的办法来不输密码。同时，我们可以通过配置ssh config文件来不输入账号。
ssh config文件具体的位置是在<code>.ssh/config</code>，在里面直接写就好，可以写入多个账号。格式如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Host alias
</span><span class='line'>HostName your_host_name
</span><span class='line'>Port your_host_port
</span><span class='line'>User your_user_name
</span><span class='line'>ServerAliveCountMax 20
</span><span class='line'>ServerdomainverAliveInterval 240</span></code></pre></td></tr></table></div></figure>


<p>之后，就直接<code>ssh alias</code>，就相当于你输入了<code>ssh your_user_name@your_host_name</code>了。</p>

<h2>ssh -tt</h2>

<p>经常会遇到要ssh两次的场景：第一次ssh到实验室里，第二次从实验室的机子ssh到集群机上。<a href="http://www.lijinma.com/index.html">金马</a>教我了个命令，可以一次就从实验室外ssh到集群上：</p>

<ol>
<li><p>首先你要实现，A登陆B，B登陆C不需要密码（生成id_rsa.pub复制到对面机器的authorized_keys，具体参考上文）;</p></li>
<li><p>ssh yourname@B &lsquo;ssh -tt yourname2@C&rsquo;</p></li>
</ol>


<p>这个命令的关键就是要加参数-tt，否则会出现错误：Pseudo-terminal will not be allocated because stdin is not a terminal</p>

<ol>
<li>最后为了方便，我每次都会加个alias的</li>
</ol>


<p>alias sshBC=&ldquo;ssh yourname@B &lsquo;ssh -tt yourname2@C&rsquo;&rdquo;</p>

<h2>scp</h2>

<p>通过ssh，来从本地往远程服务器上拷数据，或者从远程往本地拷数据都用这个命令。
具体的介绍在<a href="http://www.vpser.net/manage/scp.html">这里</a>。以下是我粘过来的部分内容。</p>

<p>1、获取远程服务器上的文件
&lsquo;&rsquo;&lsquo;
scp -P 2222 root@www.vpser.net:/root/lnmp0.4.tar.gz /home/lnmp0.4.tar.gz
&rsquo;&lsquo;&rsquo;
上端口大写P 为参数，2222 表示更改SSH端口后的端口，如果没有更改SSH端口可以不用添加该参数。 <a href="&#109;&#x61;&#x69;&#x6c;&#x74;&#x6f;&#58;&#114;&#111;&#111;&#116;&#64;&#x77;&#119;&#x77;&#46;&#118;&#112;&#115;&#x65;&#x72;&#x2e;&#x6e;&#101;&#x74;">&#x72;&#111;&#111;&#x74;&#x40;&#x77;&#x77;&#x77;&#46;&#118;&#112;&#115;&#101;&#114;&#46;&#110;&#101;&#116;</a> 表示使用root用户登录远程服务器www.vpser.net，:/root/lnmp0.4.tar.gz 表示远程服务器上的文件，最后面的/home/lnmp0.4.tar.gz表示保存在本地上的路径和文件名。</p>

<p>2、获取远程服务器上的目录
&lsquo;&rsquo;&lsquo;
scp -P 2222 -r root@www.vpser.net:/root/lnmp0.4/ /home/lnmp0.4/
&rsquo;&lsquo;&rsquo;
上端口大写P 为参数，2222 表示更改SSH端口后的端口，如果没有更改SSH端口可以不用添加该参数。-r 参数表示递归复制（即复制该目录下面的文件和目录）；<a href="&#x6d;&#x61;&#105;&#x6c;&#x74;&#111;&#x3a;&#114;&#111;&#x6f;&#x74;&#64;&#119;&#x77;&#119;&#x2e;&#118;&#112;&#115;&#x65;&#x72;&#46;&#x6e;&#x65;&#116;">&#x72;&#x6f;&#111;&#116;&#x40;&#x77;&#x77;&#119;&#x2e;&#x76;&#112;&#x73;&#101;&#114;&#x2e;&#x6e;&#101;&#116;</a> 表示使用root用户登录远程服务器www.vpser.net，:/root/lnmp0.4/ 表示远程服务器上的目录，最后面的/home/lnmp0.4/表示保存在本地上的路径。</p>

<p>3、将本地文件上传到服务器上
&lsquo;&rsquo;&lsquo;
scp -P 2222 /home/lnmp0.4.tar.gz root@www.vpser.net:/root/lnmp0.4.tar.gz
&rsquo;&lsquo;&rsquo;
上端口大写P 为参数，2222 表示更改SSH端口后的端口，如果没有更改SSH端口可以不用添加该参数。 /home/lnmp0.4.tar.gz表示本地上准备上传文件的路径和文件名。<a href="&#109;&#x61;&#105;&#x6c;&#x74;&#111;&#x3a;&#114;&#x6f;&#x6f;&#x74;&#64;&#119;&#119;&#x77;&#46;&#118;&#x70;&#x73;&#101;&#x72;&#46;&#x6e;&#x65;&#116;">&#x72;&#111;&#x6f;&#x74;&#64;&#x77;&#x77;&#x77;&#46;&#118;&#112;&#115;&#x65;&#114;&#46;&#110;&#x65;&#116;</a> 表示使用root用户登录远程服务器www.vpser.net，:/root/lnmp0.4.tar.gz 表示保存在远程服务器上目录和文件名。</p>

<p>4、将本地目录上传到服务器上
&lsquo;&rsquo;&lsquo;
scp -P 2222 -r /home/lnmp0.4/ root@www.vpser.net:/root/lnmp0.4/
&rsquo;&lsquo;&rsquo;
上 端口大写P 为参数，2222 表示更改SSH端口后的端口，如果没有更改SSH端口可以不用添加该参数。-r 参数表示递归复制（即复制该目录下面的文件和目录）；/home/lnmp0.4/表示准备要上传的目录，<a href="&#109;&#x61;&#105;&#x6c;&#116;&#x6f;&#58;&#114;&#111;&#x6f;&#x74;&#64;&#x77;&#119;&#119;&#46;&#x76;&#112;&#115;&#101;&#x72;&#46;&#110;&#x65;&#116;">&#x72;&#x6f;&#111;&#116;&#64;&#x77;&#119;&#x77;&#x2e;&#x76;&#x70;&#115;&#101;&#x72;&#46;&#x6e;&#101;&#116;</a> 表示使用root用户登录远程服务器www.vpser.net，:/root/lnmp0.4/ 表示保存在远程服务器上的目录位置。</p>

<p>5、可能有用的几个参数 :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-v 和大多数 linux 命令中的 -v 意思一样 , 用来显示进度 . 可以用来查看连接 , 认证 , 或是配置错误 .
</span><span class='line'>
</span><span class='line'>-C 使能压缩选项 .
</span><span class='line'>
</span><span class='line'>-4 强行使用 IPV4 地址 .
</span><span class='line'>
</span><span class='line'>-6 强行使用 IPV6 地址 .</span></code></pre></td></tr></table></div></figure>


<h2>history</h2>

<p>使用这个命令可以查看输入的shell命令的历史。</p>

<h2>pip</h2>

<p>用来安装python的包的，可以用<code>pip install XXX</code>来代替<code>sudo apt-get install python-XXX</code>。</p>

<p>具体看<a href="http://www.jsxubar.info/install-pip.html">这里</a>。</p>

<p>注意:
* 要将文件安到当前用户的路径下时（即你没有root权限时），输入<code>pip install --user PackageName</code>就好。另外注意<code>pip install</code>这种子命令的<code>help</code>手册是在<code>pip</code>之外的。所以查<code>--user</code>参数时，要输入<code>pip install -h</code>来找。
* IE Dept.的服务器终端默认是跑比较老的终端版本。所以说，在~/.login最后加入一句<code>exec bash</code>。</p>

<h2>ps aux</h2>

<p>查看系统当前进程。结合grep可以很方便的查找指定的进程。如<code>ps aux | grep mongo</code>就能找到mongoDB的进程。
参数中，a是指显示所有程序，包括其它用户的程序，u表示以用户为主的格式显示，x表示显示不以终端来区分程序。
我也不知道具体是什么意思&hellip;会用就好&hellip;
详细的参数可以查看<a href="http://www.360doc.com/content/11/0530/23/2104556_120606853.shtml">这里</a></p>

<h2>df</h2>

<p>因为在香港做的东西很吃硬盘，所以说，要判断下硬盘的剩余空间够不够。可以用下面这句话来看/tmp的剩余空间</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bash-4.1$ df | grep tmpfs | awk '{print $4}'</span></code></pre></td></tr></table></div></figure>


<p>df就是查看硬盘空间了，grep是把tmp抓出来（/tmp就叫tmpfs这个名字），然后再用awk把第4列（注意这里的列数是从1开始的），也就是可用空间抓出来。</p>

<p>在python中调用以上命令，用<a href="http://www.cnblogs.com/xuxm2007/archive/2011/01/17/1937220.html">commands模块</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt;&gt;&gt; import commands
</span><span class='line'>&gt;&gt;&gt; dir(commands)
</span><span class='line'>['__all__', '__builtins__', '__doc__', '__file__', '__name__', 'getoutput', 'getstatus','getstatusoutput', 'mk2arg', 'mkarg']
</span><span class='line'>&gt;&gt;&gt; commands.getstatusoutput("date")
</span><span class='line'>(0, 'Wed Jun 10 19:40:41 CST 2009')</span></code></pre></td></tr></table></div></figure>


<h2>du</h2>

<p>这是一个查看文件大小的命令。常用<code>du -sh</code>来显示当前路径下所有文件的总的大小。</p>

<h2>awk</h2>

<p>因为在Server上跑python时，想强行退出只能先Ctrl + z，于是就有了一堆进程在后台等待。
pili过来查看了下，直接输入一行命令，就干掉了所有的python进程：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ps aux | grep python | awk '{print $2}' | xargs kill -9</span></code></pre></td></tr></table></div></figure>


<p>先说awk，它是一个很强大的文本分析工具，<code>awk '{print $2}'</code>就是把第二列取出来，更多的介绍可以查看<a href="http://www.cnblogs.com/ggjucheng/archive/2013/01/13/2858470.html">这里</a>。</p>

<h2>xargs</h2>

<p>另一个强大的工具，将之前命令产生的参数列表拆散成多个子串，然后对每个子串调用要执行的命令。
具体的来看<a href="http://zh.wikipedia.org/wiki/Xargs">wikipedia</a>吧。</p>

<h2>kill</h2>

<p><code>kill -9 pid</code>，记得传-9这个参数，这样就直接干掉进程了（好残忍的感觉&hellip;)</p>

<h2>mkdir</h2>

<p>这个命令就不多说了。只是用它建立新文件夹的时候，要建立多层的文件夹时，是加<code>-p</code>，而不是像其它命令一样是<code>-r</code>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[折腾vim]]></title>
    <link href="http://guori12321.github.io/blog/2013/09/04/zhe-teng-vim/"/>
    <updated>2013-09-04T10:38:00+08:00</updated>
    <id>http://guori12321.github.io/blog/2013/09/04/zhe-teng-vim</id>
    <content type="html"><![CDATA[<p>现在用vim仅仅是比用记事本高效，很多功能还没搞明白&hellip;</p>

<p>配置vim是个很折腾的过程，我用的是<a href="https://github.com/spf13/spf13-vim">spf13</a>，只可惜用这个配置，一样有很多地方要改动。<a href="https://gist.github.com/guori12321/7211967">我的.vimrc.local</a>。我的使用习惯是：</p>

<!--more-->


<ul>
<li><p>在它的.vimrc中把所有&#8217;nowrap&#8217;改为&#8217;wrap&#8217;。写代码的时候不自动折行还好，但写日志等文本内容，不折行就没法用了。</p></li>
<li><p>spf13中每次保存的时候都会自动帮你编译一下，并报出所有的语法错误。只是这种做法带来很多问题：语法检查过于严格，声明完变量不使用都会报错；报错时会新建一个分栏，每次报错后我都要自己关掉它；最不能忍的是，有时候保存一下，然后vim就会自动退出。解决：<code>echo let\ g:pymode_lint\ =\ 0 &gt;&gt; ~/.vimrc.local</code>。</p></li>
<li><p>Close the Code Checking \ syntastic in spf13: <code>echo let\ g:pymode_lint\ =\ 0 &gt;&gt; ~/.vimrc.local</code>。</p></li>
<li><p>我习惯在Insert中把&lt;C-H>绑定为向左，&lt;C-L>为向右。在.vimrc或.vimrc.local中设置都会失效。解决：用<code>imap &lt;C-H&gt; &lt;Left&gt;</code>而不要用<code>inoremap</code>，怀疑是内部的键位绑定冲突。</p></li>
<li><p>按&lt;C-V>是进入Visual Block模式，用它可以很方便的给大段的代码打注释。我之前都是用&lt;C-V>进入Visual再&lt;C-Q>进入Visual Block，就麻烦了一些。</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MongoDB路线图]]></title>
    <link href="http://guori12321.github.io/blog/2013/09/02/mongodblu-xian-tu/"/>
    <updated>2013-09-02T15:48:00+08:00</updated>
    <id>http://guori12321.github.io/blog/2013/09/02/mongodblu-xian-tu</id>
    <content type="html"><![CDATA[<p><code>MongoDB</code>是非常有名的No SQL数据库，话说还真是适应不了No SQL的思维，每次都想着先建表&hellip;。以下是我学习MongoDB的路线图：</p>

<!--more-->


<p><strong>2013-10-31 一定要小心使用collection.update()!!!这个命令并不是说，把新的属性加上，而是把档案直接update为你要更新的值!!在程序跑到一半的时候，我查看了下，结果发现数据全丢了！！！心脏都要停止跳动了！！！</strong></p>

<h2>路线图</h2>

<ol>
<li><p>首先肯定是看看<a href="http://www.mongodb.org/">官网的资料了</a>。这里面有最初级的教程，以及最详细权威的文档。走一遍它的教程后，相信你会对MongoDB有最初步的了解，学习深入后，再来这里查询文档。只是，这里没有难度适中的教程。要么有太多的细节，要么太过简略了。</p></li>
<li><p>一篇很好的<a href="http://www.eduyo.com/database/nosql/805.html">中文简易教程</a>，看一遍就知道MongoDB有哪些神奇的功能了～</p></li>
<li><p><a href="http://blog.nosqlfan.com/html/2989.html">python使用Mongo的教程</a></p></li>
</ol>


<h2>关于Mongod和Mongo命令</h2>

<p>听pili讲了好一会，才有了一点概念：Mongod比Mongo高一层，Mongod可以指定路径(&mdash;dbpath)，Mongo则是指定端口。同一个Mongod可以有好几个Mongo。总体感觉Mongod相当于SQL中的connection，如果两个Mongod指向不同的路径，那么它俩就没有交互，可以独立的读写，而不用担心读和写同时进行，而让数据乱掉。</p>

<p>我现在对它俩的关系的理解就是，Mongod相当于C++中的流，Mongo就是具体的文件。</p>

<p>可以为Mongod和Mongo指定端口。不同的Mongod必须使用不同的端口。不同的Mongo可以使用同一端口。当Mongo和Mongod使用同一端口的时候，这个Mongo就挂到Mongod上了。具体在python中，Mongod相当于一个connection。</p>

<h2>其它要注意的</h2>

<ul>
<li><p>MongoDB的索引值只能为<strong>string</strong>，很神奇~</p></li>
<li><p>要想指定ObjectID，只用在插入的时候，指定&#8221;_id&#8221;参数就好</p></li>
<li><p>关于同一个collection的大小：之前在用MySQL存微博上的数据的时候，同一张表中存入10万条微博，读写的速度都在0.04秒左右，一旦上百万级，就要5秒左右，完全不可以接受。当时把百万级的数据分成了十个表。关于MongoDB存多少合适，我的实验结果是四亿条数据（每条数据都只有一个_id和一个int型的属性值）内都没有问题，一早上插入了4亿条数据，耗时在0.1秒以内就找到了，整个库有50多G。在测试时，每插入5万条左右的数据，就会卡那么一秒，之后再接着插入。应该是MongoDB内部在新建一些结构吧。</p></li>
<li><p>Mongodb的索引只能是string类型，但_id的类型可以是int</p></li>
</ul>


<p>未完待续&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HackerRank K-mismatch题解]]></title>
    <link href="http://guori12321.github.io/blog/2013/08/25/hackerrank-k-mismatchti-jie/"/>
    <updated>2013-08-25T14:39:00+08:00</updated>
    <id>http://guori12321.github.io/blog/2013/08/25/hackerrank-k-mismatchti-jie</id>
    <content type="html"><![CDATA[<p>其实算不上题解，只是讲讲自己的解题的思路吧。最后也没做出来，50分拿了25分。</p>

<p><a href="https://www.hackerrank.com/contests/quantium/challenges/k-mismatch">题目地址</a></p>

<p>给定一个字符串，对它的任意两个长度相同的子串，若这两个子串的同一位置处的不同的字符的个数少于一个阈值k，就将这两个子串统计下来。问，一共有多少个满足要求的子串对。</p>

<!--more-->


<p>同一个字符串，有很多子串，子串对就更多了。因此这道题目对算法的效率的要求就比较高了。最朴素的办法，是，先枚举子串的长度，再枚举第一个和第二个子串的起始位置，之后再比较两个子串的不同字符的个数。这样的话，是O(N<sup>4</sup>)的复杂度。</p>

<p>分析下上面的思路，有哪里做了<strong>重复工作</strong>呢？是最后比较的那里，因为对于长度相同而位置只差一位的两个子串来说，它两只是错了一位而已，没必要全部重新比较下。我们可以用<strong>扩展</strong>的办法，来进行子串的比较。</p>

<p>具体就是：先枚举第一个和第二个子串起点的差值（即这两个子串的距离），再枚举第一，二个子串的起点。刚开始的时候，把两个子串所有位置都比较一次，把不同的字符的个数记录下来。之后，这两二个子串分别向后移动了一位，这时，只用比较移出去的那位字符，和移进来的新字符是否相同就好了，根据这两位字符的情况，在上一次的记录上加减就好了。这样对空间的要求也不高，只用了一个临时的记录不同字符的int而已。（事实上我先是开了很大的数组，后来才发现可以优化）</p>

<p>代码如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># -*- coding: utf-8 -*-
</span><span class='line'>
</span><span class='line'>def mismatch(a, b):
</span><span class='line'>    global K
</span><span class='line'>    tot = 0
</span><span class='line'>    for i in range(len(a)):
</span><span class='line'>        if a[i] != b[i]:
</span><span class='line'>            tot += 1
</span><span class='line'>            if tot &gt; K:
</span><span class='line'>                return K+1
</span><span class='line'>    return tot
</span><span class='line'>
</span><span class='line'>K = int(raw_input())
</span><span class='line'>S = raw_input()
</span><span class='line'>
</span><span class='line'>ans = 0
</span><span class='line'>team = []
</span><span class='line'>
</span><span class='line'>#先计算小于 或 等于K的子串对
</span><span class='line'>for i in xrange(1,K+1):
</span><span class='line'>    ans += ((len(S) - i + 1)*(len(S) - i)) / 2
</span><span class='line'>
</span><span class='line'>#枚举两个子串的位置的差值 边界值：第一个子串固定，第二个一直移动到最后
</span><span class='line'>for i in xrange(1, len(S) - (K+1)+1):
</span><span class='line'>    #misMatrix[0][i] = mismatch(S[0:K+1], S[i:i+K+1])
</span><span class='line'>    mis0 = mismatch(S[0:K+1], S[i:i+K+1])
</span><span class='line'>    if mis0 &lt;= K:
</span><span class='line'>        ans += 1
</span><span class='line'>
</span><span class='line'>    #枚举第一个子串的其它位置，第二个子串和它距离为i
</span><span class='line'>    for j in xrange(1, len(S)-(K+1)):
</span><span class='line'>        if j+i+K &gt;= len(S):
</span><span class='line'>            break
</span><span class='line'>        #misMatrix[j][j+i] = misMatrix[j-1][j+i-1]
</span><span class='line'>        mis = mis0
</span><span class='line'>        if S[j-1] != S[j+i-1]:
</span><span class='line'>            mis -= 1
</span><span class='line'>        if S[j+K] != S[j+i+K]:
</span><span class='line'>            mis += 1
</span><span class='line'>        if mis &lt;= K:
</span><span class='line'>            ans += 1
</span><span class='line'>
</span><span class='line'>            zz = 0
</span><span class='line'>            t = mis
</span><span class='line'>            while j-zz &gt;= 0 and t &lt;= K:
</span><span class='line'>                zz += 1
</span><span class='line'>                if j-zz &lt; 0:
</span><span class='line'>                    break
</span><span class='line'>                if S[j-zz] != S[j+i-zz]:
</span><span class='line'>                    t += 1
</span><span class='line'>                    if t &lt;= K:
</span><span class='line'>                        ans += 1
</span><span class='line'>                    else:
</span><span class='line'>                        break
</span><span class='line'>                else:
</span><span class='line'>                    ans += 1
</span><span class='line'>
</span><span class='line'>        mis0 = mis
</span><span class='line'>print ans</span></code></pre></td></tr></table></div></figure>


<p>然后就只拿了25分&hellip;做这个题目花了很久的时间，加起来三四个小时了吧，因为一些边界和变量名打错的bug一直没调出来&hellip;写代码还是要头脑清醒啊。</p>

<p>谁会做告诉我下吧&hellip;谢谢&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[给octopress添加3D标签云]]></title>
    <link href="http://guori12321.github.io/blog/2013/08/20/gei-octopresstian-jia-3dyun-biao-qian/"/>
    <updated>2013-08-20T13:26:00+08:00</updated>
    <id>http://guori12321.github.io/blog/2013/08/20/gei-octopresstian-jia-3dyun-biao-qian</id>
    <content type="html"><![CDATA[<p>3D标签云的效果看右栏。很炫很神奇～</p>

<p>具体做法是：</p>

<ol>
<li><p>从我的github库中<a href="https://github.com/guori12321/octopress-cumulus/archive/master.zip">下载源代码</a></p></li>
<li><p>把相应的文件粘到自己octopress，另外在边栏那里把它显示出来就好。具体参考我的github上的<a href="https://github.com/guori12321/octopress-cumulus">README</a>。</p></li>
</ol>


<h2>Octopress 3D categories/tags-cloud configuration for non-English tags</h2>

<p>You can see my 3D categories-tag at the right sidebar. It&rsquo;s awesome! However, the origin version doesn&rsquo;t support <strong>non-English</strong> tags, so I revised the codes and put them in my github. It now works!</p>

<p>It&rsquo;s easy to configuration:</p>

<ol>
<li><p>Download the source codes from my <a href="https://github.com/guori12321/octopress-cumulus/archive/master.zip">github repo</a></p></li>
<li><p>Copy the codes to your octopress. The detail is given at <a href="https://github.com/guori12321/octopress-cumulus">my github repo README</a></p></li>
</ol>


<!--more-->


<h2>我之前碰到的问题</h2>

<p>主要是不支持汉语标签。虽然这个插件的作者是中国人，但是他俩的博客都是全英文，所以不存在这个问题。我还是很想用汉语标签的。octopress本身支持汉语标签，点击汉语标签后，会发现它把路径中的汉字转成<strong>拼音</strong>了，所以说就不存在汉语路径的问题。</p>

<p>这个插件原本是直接用汉语作路径的，于是我就按照<a href="http://notes.liyaos.com/blog/2013/01/18/octopress/">这篇文章</a>把标签的路径设定为汉语的了。在本地上preview没问题，但deploy到github上就无法识别，会报404错误。怀疑与github那边的编码方式有关。</p>

<p>既然无法用汉语作路径，那还是按octopress原先的办法，用拼音作路径吧。于是我对这个插件进行了<a href="https://github.com/guori12321/octopress-cumulus/commit/0af2339ba1f2ce574a8a17d706e56b3aee6835a1">小小的改动</a>。终于，一切正常了～～</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我的git路线图]]></title>
    <link href="http://guori12321.github.io/blog/2013/08/18/wo-de-gitlu-xian/"/>
    <updated>2013-08-18T01:13:00+08:00</updated>
    <id>http://guori12321.github.io/blog/2013/08/18/wo-de-gitlu-xian</id>
    <content type="html"><![CDATA[<p>Git是广大人民群众喜闻乐见的版本控制器。以前写代码的时候经常碰到这种情况：想尝试着加点新功能，结果发现出了很严重的bug，想回滚代码，却没有办法，只能根据回忆一点点删改新加入的代码。后来，每当要进行大的变动时，就把原来的代码打个包，备份下。这样做非常的笨。Git就解决了这种问题。</p>

<p>可是，虽然所有人都说git简单易用，但我入门时还是费了很多力气的。以下是我使用git的路线图：</p>

<!-- more -->


<ul>
<li><p>入门教材：<a href="http://www.21andy.com/blog/uploads/downloads/2010/12/git_tutorial.pdf">看日记学git</a>，这是我见过的最好的git学习资料了。看了前十几天的内容就好。</p></li>
<li><p><code>git rm</code>与<code>rm</code>的同步问题：在git下使用<code>rm</code>命令的时候，会将工作区的文件删掉，但是，git仓库中的文件并不会被删掉。也就是说，现在看来，文件确实是没了，但在commit之后再回滚回来，那些文件，又会出来了。解决办法是，用<code>git rm</code>命令，这样，仓库中的文件也被删掉。不过，我经常忘记用<code>git rm</code>，怎么办呢？很简单，下次add的时候，多加个参数：<code>git add -u</code>，这样会自动刷新暂存区，之后暂存区中的文件就与工作区中的文件一一对应了。git add -h中的介绍是</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-u, --update          update tracked files</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p><code>git rm --cached filename</code>: 与上一条的区别是，这仅仅删除index中的文件，而不会删除working tree中的文件。适用于不小心push了不想公开的文件到github上。这时，在本地rm &mdash;cached之后，别<code>git add .</code>，直接commit就好。</p></li>
<li><p><code>git reset</code>与<code>git revert</code>的区别：前者是撤销某次commit，后者是回滚代码到某一次commit。此外，前者会删改git的历史（比如说，你撤销了某次commit，这样的话，git的历史中就不会记录这次commit了），而后者不会（事实上，revert会把当前工作区中的代码恢复到以前的某次commit，然后新增加一次新的commit）。有点晕是吧，<a href="http://stackoverflow.com/questions/8358035/whats-the-difference-between-git-revert-checkout-and-reset/8358039#8358039">stackOverflow上有很详细的讲解</a>。当然，更晕的是，通过加不同的参数，这两个命令，有时可以起同样的作用。不要研究太深，需要用到的时候再去查就好。</p></li>
</ul>


<h2>git submodule</h2>

<p>有些时候我们会想在一个版本库中调用另一个版本库的代码，或者像我在香港实习时遇到的要保持本机上和服务器上某些代码一致的问题。这时候，用git submodule就是非常好的选择。</p>

<p><a href="http://git-scm.com/book/en/Git-Tools-Submodules">官方文档</a>对它的介绍已经很完善了。只是，这东西怎么看着都不靠谱啊！比如说，各个submodule的版本问题，<a href="http://blog.devtang.com/blog/2013/05/08/git-submodule-issues/">有些时候会比较坑</a>，另外，就连官方文档里都有&#8221;It’s strange, but it works.&ldquo;和&#8221;Then, you e-mail that guy and yell at him.&#8221;。</p>

<p>现在看来，各个版本库之间的关系有点乱，很容易出现问题。所以说，大家要小心~另外发现这么一篇<a href="http://codingkilledthecat.wordpress.com/2012/04/28/why-your-company-shouldnt-use-git-submodules/">黑它的文章</a>&hellip;</p>

<p>未完待续&hellip;</p>
]]></content>
  </entry>
  
</feed>
